<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogementRepository extends \Doctrine\ORM\EntityRepository
{

    public function findciteby($idcite){
        $qb=$this->getEntityManager()
            ->createQuery("SELECT u 
                            FROM AppBundle:Logement u JOIN AppBundle:Cite c WITH u.id_cite = c.id_cite
                            WHERE c.id_cite='$idcite'");

        return $qb->getResult();
    }

    public function findreservation($iduser){
        $qb=$this->getEntityManager()
            ->createQuery("SELECT u 
                            FROM AppBundle:Logement u JOIN AppBundle:ReservationLogement r WITH u.id = r.idLogement
                            WHERE r.idUser='$iduser'");

        return $qb->getResult();
    }


    public function findLogByID($id){
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT c.idCite,c.nomCite,u.id,u.titre,u.description,u.prix,u.url 
                            FROM AppBundle:Logement u JOIN AppBundle:Cite c WITH u.idCite = c.idCite
                            WHERE  u.idUser='$id'");
        if(count($query->getArrayResult()) > 0) return $query->getResult();
        return null;
    }

    public function findalllog(){
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT c.idCite,c.nomCite,u.id,u.titre,u.description,u.prix,u.url ,u.isdisponible 
                            FROM AppBundle:Logement u JOIN AppBundle:Cite c WITH u.idCite = c.idCite");
        if(count($query->getArrayResult()) > 0) return $query->getResult();
        return null;
    }


    public function findReslog(){
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT c.reference,u.titre,u.description,u.prix,u.url,u.id  
                            FROM AppBundle:Logement u JOIN AppBundle:ReservationLogement c WITH c.idUser = u.idUser AND u.id=c.idLogement");
        if(count($query->getArrayResult()) > 0) return $query->getResult();
        return null;
    }


}